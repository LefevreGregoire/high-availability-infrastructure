Installation et configuration des reverse Proxies NGINX

Cette partie du TP concerne la mise en place de deux serveurs reverse proxy NGINX avec une architecture résiliente basée sur Keepalived pour la gestion de l'IP virtuelle (VIP) et assurant la distribution de charge vers les serveurs frontend et backend.

## Architecture

- **NGINX01** : Reverse proxy principal (192.168.1.100)
- **NGINX02** : Reverse proxy secondaire (192.168.1.101)
- **VIP NGINX** : Adresse IP virtuelle partagée (192.168.1.150/24)
- **Système** : Debian 12.4

## Prérequis

Les deux serveurs NGINX doivent avoir :

- **Interface réseau** : Réseau Interne
- **Accès au réseau interne** : 192.168.1.0/24
- **Gateway** : 192.168.1.252 (NGINX01) ou 192.168.1.253 (NGINX02)

## Configuration réseau statique sur NGINX01

Éditez le fichier `/etc/network/interfaces` :

```bash
sudo nano /etc/network/interfaces
```

Ajoutez la configuration suivante :

```bash
# Interface réseau principale
auto enp0s3
iface enp0s3 inet static
    address 192.168.1.100
    netmask 255.255.255.0
    gateway 192.168.1.252
    dns-nameservers 8.8.8.8 8.8.4.4
```

## Sur NGINX02

```bash
sudo nano /etc/network/interfaces

# Interface réseau principale
auto enp0s3
iface enp0s3 inet static
    address 192.168.1.101
    netmask 255.255.255.0
    gateway 192.168.1.253
    dns-nameservers 8.8.8.8 8.8.4.4
```

Redémarrez le service réseau sur les deux machines :

```bash
sudo systemctl restart networking
```

Vérifiez la configuration :

```bash
ip a
```

## Installation des paquets nécessaires

Sur **NGINX01** et **NGINX02**, installez les paquets requis :

```bash
# Mise à jour du système
sudo apt update && sudo apt upgrade -y

# Installation de NGINX
sudo apt install -y nginx

# Installation de Keepalived pour la haute disponibilité
sudo apt install -y keepalived

# Installation de PHP et extensions pour le serveur frontend
sudo apt install -y php8.2 php8.2-cli php8.2-fpm php8.2-common php8.2-curl \
                     php8.2-mbstring php8.2-xml php8.2-zip

# Installation de Git et Composer
sudo apt install -y git curl unzip

# Installation de Composer
curl -sS https://getcomposer.org/installer | php
sudo mv composer.phar /usr/local/bin/composer
sudo chmod +x /usr/local/bin/composer

# Vérification des installations
nginx -v
php --version
composer --version
```

## Récupération du projet Frontend

Sur **NGINX01** et **NGINX02**, clonez le dépôt frontend :

```bash
# Se positionner dans le répertoire web
cd /var/www/html

# Supprimer le contenu par défaut
sudo rm -rf *

# Cloner le projet frontend depuis GitHub
sudo git clone https://github.com/ClemLcs/ManageVMFront.git .

# Installer les dépendances PHP
sudo composer install --no-dev --optimize-autoloader

# Donner les permissions appropriées
sudo chown -R www-data:www-data /var/www/html
sudo chmod -R 755 /var/www/html
```

## Configuration de NGINX

### Suppression de la configuration par défaut

Sur **NGINX01** et **NGINX02** :

```bash
# Supprimer le fichier de configuration par défaut
sudo rm /etc/nginx/sites-enabled/default
```

### Création de la configuration reverse proxy

Créez le fichier de configuration :

```bash
sudo nano /etc/nginx/sites-available/reverse-proxy
```

Contenu de la configuration :

```bash
# Définition des serveurs backend
upstream backend_servers {
    least_conn;  # Équilibrage basé sur le nombre de connexions actives
    server 192.168.1.200:8000;  # VIP Backend (Keepalived BACKEND01/02)
}

# Définition des serveurs frontend (instances PHP locales)
upstream frontend_servers {
    least_conn;
    server 127.0.0.1:8001;  # Instance PHP locale sur NGINX01 (ou 8002 sur NGINX02)
}

server {
    listen 80;
    server_name _;

    # Logs
    access_log /var/log/nginx/reverse-proxy-access.log;
    error_log /var/log/nginx/reverse-proxy-error.log;

    # Routage vers le frontend
    location / {
        proxy_pass http://frontend_servers;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Routage vers le backend API
    location /api/v1/ {
        proxy_pass http://backend_servers;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
```

### Activation de la configuration

```bash
# Créer le lien symbolique
sudo ln -s /etc/nginx/sites-available/reverse-proxy /etc/nginx/sites-enabled/

# Tester la configuration
sudo nginx -t

# Recharger NGINX
sudo systemctl reload nginx

# Vérifier le statut
sudo systemctl status nginx
```
